---
title: "week4 discussion"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(spData)
library(spDataLarge)
library(sf)
library(stars)
library(terra)
library(tmap)
```

```{r}
dem <- terra::rast(system.file("raster/dem.tif", package = "spDataLarge"))
landsat <- terra::rast(system.file("raster/landsat.tif", package = "spDataLarge"))
srtm <- terra::rast(system.file("raster/srtm.tif", package = "spDataLarge"))
peru <- stars::read_stars(here::here("data", "week4-discussion", "PER_elv.tif"))
peru <- rast(peru)
```

```{r}
hist(dem,
     main = "Digital Elevation Model Raster Value Distribution",
     xlab = "Value")

```

```{r}

boxplot(dem,
        main = "Digital Elevation Model Raster Value Distribution",
     xlab = "Value")

```

```{r}
rcl <- matrix(c(-Inf, 300, 0, 
                300, 500, 1, 
                500, Inf, 2), 
              ncol = 3, byrow = TRUE)

dem_reclass <- terra::classify(dem, rcl = rcl)

levels(dem_reclass) <- tibble::tibble(id = 0:2, 
                                  cats = c("low", "medium", "high"))

elevation_mean <- terra::zonal(dem, dem_reclass, fun = "mean")
elevation_mean
```

```{r}
# define NDVI as the normalized difference between NIR and red bands
ndvi_fun <- function(nir, red){
  (nir - red) / (nir + red)
}

ndvi_rast <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)

ndwi_fun <- function(nir, green){
  (green - nir) / (green + nir)
}

ndwi_rast <- lapp(landsat[[c(4, 2)]], fun = ndvi_fun)

plot(ndwi_rast,
     main = "Zion National Park NDWI")

tm_shape(ndvi_rast) +
  tm_raster(title = "NDVI")

tm_shape(ndwi_rast) +
  tm_raster(title = "NDWI")

combine <- c(ndvi_rast, ndwi_rast)

# calculate the correlation between raster layers 
terra::layerCor(combine, fun = cor)
```

```{r}
# Aggregate by a factor of 20 to reduce resolution and create new raster
peru_agg <- terra::aggregate(peru, fact = 20)
plot(peru_agg)

# Create mask of ocean (NA values)
water_mask <- is.na(peru_agg) # returns TRUE value for NA
# Set all FALSE values to NA
water_mask[water_mask == 0] <- NA
plot(water_mask)

```

```{r}
# Find distance from each cell to ocean/coastline (default is unit = "m")
distance_to_coast <- terra::distance(water_mask)
distance_to_coast
# Convert from meters to kilometers 
distance_to_coast_km <- distance_to_coast/1000

plot(distance_to_coast_km, main = "Distance to the coast (km)")
```

```{r}
plot(srtm)
```

```{r}
rast_template <- terra::rast(terra::ext(srtm), res = 0.01)

srtm_resampl1 <- terra::resample(srtm, y = rast_template, method = "bilinear")
srtm_resampl2 <- terra::resample(srtm, y = rast_template, method = "near")
srtm_resampl3 <- terra::resample(srtm, y = rast_template, method = "cubic")
srtm_resampl4 <- terra::resample(srtm, y = rast_template, method = "cubicspline")
srtm_resampl5 <- terra::resample(srtm, y = rast_template, method = "lanczos")

srtm_resampl_all <- c(srtm_resampl1, srtm_resampl2, srtm_resampl3, srtm_resampl4, srtm_resampl5)
labs <- c("Bilinear", "Near", "Cubic", "Cubic Spline", "Lanczos")
plot(srtm_resampl_all, main = labs)
```

